====================================
TITLE: 将 iso 映象写入 U盘
====================================

# cp debian.iso /dex/sdX
# sync

====================================
TITLE: 格式化U盘
====================================

如果U盘做过镜像启动盘，U盘的大小会变小，因为有一部分空间隐藏了。可以通过Windows的设备管理查看详细信息。

如果要恢复U盘容量，需要完全格式化U盘。方法如下：

# umount /dev/sdb1
# umount /dev/sdb

# mkfs.vfat /dev/sdb
# mkfs.vfat /dev/sdb1

如果mkfs.vfat /dev/sdb出现如下错误：

mkfs.vfat: unable to open /dev/sdb

则需要先格式化/dev/sdb1，即：

# mkfs.vfat /dev/sdb1

如果格式化/dev/sdb出现如下错误

mkfs.vfat: Device partition expected, not making filesystem on entire device '/dev/sdb' (use -I to override)

则需要使用-I参数来完成格式化，即：

# mkfs.vfat -I /dev/sdb

====================================
TITLE: 更新Debian源
====================================

在/etc/apt/sources.list中，更新如下内容

# Debian 7.1.0 "Wheezy"
deb http://mirrors.163.com/debian/ wheezy main contrib non-free
deb-src http://mirrors.163.com/debian/ wheezy main contrib non-free

deb http://security.debian.org/ wheezy/updates main contrib non-free
deb-src http://security.debian.org/ wheezy/updates main contrib non-free

# wheezy-updates, previously known as 'volatile'
deb http://mirrors.163.com/debian/ wheezy-updates main contrib non-free
deb-src http://mirrors.163.com/debian/ wheezy-updates main contrib non-free

更新

$ apt-get update

====================================
TITLE: Debian 中文乱码
====================================

# aptitude install locales
# dpkg-reconfigure locales

选择 en_US.UTF8

/etc/default/locale
LANG=en_US.UTF-8

====================================
TITLE: 设置固定IP

URL: http://www.360doc.com/content/13/0516/16/12139495_285882114.shtml
====================================

需要使用的文件
/etc/network/interfaces
/etc/resolv.conf

设置IP地址
# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
#allow-hotplug eth0
#auto eth0
#iface eth0 inet dhcp
# 使用第一块网卡
auto eth0
# 静态分配IP
iface eth0 inet static
address 192.168.26.131
netmask 255.255.255.0
gateway 192.168.26.2

设置DNS
domain localdomain
search localdomain
nameserver 192.168.26.2

重启网卡

$ /etc/init.d/networking restart

====================================
TITLE: 查看网关
====================================

$ cat /etc/resolv.conf
domain localdomain
search localdomain
nameserver 192.168.26.2

$ netstat -r
Kernel IP routing table
Destination     Gateway         Genmask         Flags   MSS Window  irtt Iface
default         192.168.26.2    0.0.0.0         UG        0 0          0 eth0
192.168.26.0    *               255.255.255.0   U         0 0          0 eth0

$ ip route show
default via 192.168.26.2 dev eth0
192.168.26.0/24 dev eth0  proto kernel  scope link  src 192.168.26.131

====================================
TITLE: 安装 sudo

URL: http://tw.tonytuan.org/2009/10/debiansudoers-list.html#ixzz2Y8ccj9fs
====================================

# aptitude install sudo

然後再執行
# visudo
增加一行 %sudo ALL=(ALL) ALL

然後再將使用者加到 sudo 這個群組裡面
# gpasswd -a fourdollars sudo

輸入visudo(用來修改sudoers list)
找到下面這行
root ALL=(ALL) ALL
在步驟2那行下方，打上：
david ALL=(ALL) ALL

====================================
TITLE: 修改 visudo 的默认编辑器
====================================

visudo 默认的编辑器为 /usr/bin/editor，它指向 /etc/alternatives/editor

# update-alternatives --config editor

选择编辑器

There are 4 choices for the alternative editor (providing /usr/bin/editor).

  Selection    Path                Priority   Status
------------------------------------------------------------
* 0            /bin/nano            40        auto mode
  1            /bin/nano            40        manual mode
  2            /usr/bin/emacs23     0         manual mode
  3            /usr/bin/vim.basic   30        manual mode
  4            /usr/bin/vim.tiny    10        manual mode

Press enter to keep the current choice[*], or type selection number: 3
update-alternatives: using /usr/bin/vim.basic to provide /usr/bin/editor (editor) in manual mode

# ls -l /usr/bin/editor
lrwxrwxrwx 1 root root 24 Jul  3 15:51 /usr/bin/editor -> /etc/alternatives/editor

# ls -l /etc/alternatives/editor
lrwxrwxrwx 1 root root 18 Jul  5 11:09 /etc/alternatives/editor -> /usr/bin/vim.basic

====================================
TITLE: 安装 git

URL: http://blog.csdn.net/rainysia/article/details/7592527
====================================

$ aptitude install git

====================================
TITLE: 安装 unzip
====================================

$ apt-get install unzip

====================================
TITLE: 路由修改
====================================

添加默认路由

# route add default gw x.x.x.x

删除默认路由

# route del default gw x.x.x.x

查看路由表

# netstat -tr

添加路由

# route add -net x.x.x.x/24 gw x.x.x.x

====================================
TITLE: 设置代理
====================================

$ export http_proxy=http://username:password@proxyserver.net:port/
$ export https_proxy=http://username:password@proxyserver.net:port/
$ export ftp_proxy=http://username:password@proxyserver.net:port/

====================================
TITLE: 在 Shell Script 中设置当前 Shell 的环境变量
====================================

通常的做法是写一个 shell script，然后再 Bash 或 Ksh 中用 "."，在 C Shell 中用 source 去执行那个 Shell Script，例如：

Bash 或 C Shell

$ . myscript

C shell

$ source myscript

====================================
TITLE: find 命令用法
====================================

# 查找当前目录下~后缀的文件
find . -name "*~" -exec ls {} \;

====================================
TITLE: 安装 xfce

URL: blog.sina.com.cn/s/blog_671784400100xyf7.html
====================================

$ apt-get install xorg
$ apt-get install xfce4
$ apt-get install xfce4-goodies

无需其他设置，用命令即可启动轻量级图形界面xfce4

$ startx

安装启动界面

$ apt-get install slim

修改/etc/slim.conf，把xfce4作为default

#login_cmd  exec /bin/bash -login /etc/X11/Xsession %session
login_cmd   exec /bin/bash -login /etc/X11/Xsession startxfce4

====================================
TITLE: 安装无线网卡

URL: wiki.debian.org/iwlwifi?action=show
====================================

在源中添加non-free组件，/etc/apt/sources.list

# Debian 7.0 "Wheezy"
deb http://mirrors.163.com/debian/ wheezy main contrib non-free

更新源，并安装firmware-iwlwifi

$ apt-get update
$ apt-get instal firmware-iwlwifi

重启安装的模块

$ modprobe -r iwlwifi
$ modprobe iwlwifi

安装网络管理工具

$ apt-get install wicd

修改/etc/network/interfaces如下

# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
#auto eth0
#iface eth0 inet dhcp

进行如下操作

# adduser david netdev
# /etc/init.d/dbus reload

# /etc/init.d/wicd start
# exit

$ wicd-client -n

====================================
TITLE: 安装字体
====================================

文泉宋体

$ apt-get install xfonts-wqy
$ apt-get install ttf-wqy-zenhei ttf-wqy-microhei

uming宋体

$ apt-get install fonts-arphic-uming ttf-arphic-uming

外来字体（如Windows中的字体）
把字体文件（simsun.ttc)直接拷贝到~/.fonts下，即可

====================================
TITLE: 安装拼音输入法
====================================

$ apt-get install ibus-pinyin

装好之后，重启，手动添加输入法

Application Menu -> Settings -> IBus Preferences
Input Method -> Select an input method -> Chinese - Pinyin

添加，完成

====================================
TITLE: 安装chromium浏览器
====================================

$ aptitude install chromium-browser-l10n

优化chromium字体，设置字体，全部改为: AR PL UMing CN

为chromium安装flash

修改sources.list，每一项追加：non-free contrib

$ aptitude search flashplugin
$ apt-get install flashplugin-nonfree

上述方法可能没有效果，对此，可以安装Adobe的Flash Player

下载地址: http://get.adobe.com/flashplayer/?no_redirect

# tar -zxvf install_flash_player_11_linux.x86_64.tar.gz
# cp libflashplayer.so /usr/lib/mozilla/plugins/
# cp -r usr/* /usr

问题: Adobe 宣布在 Flash Player 11.2 之后将不再为桌面 Linux 平台提供使用 NPAPI 接口的新版本 Flash Player，仅提供安全更新。参见: http://mkv.cn/2546/adobe-announce-to-abondon-naapi-flash-player-on-linux

====================================
TITLE: chromium无法上网
====================================

可能于设置有关，Settings -> Show advanced settings...

去掉 Predict network actions to improve page load performance

====================================
TITLE:  常用软件
====================================

$ apt-get install filezilla
$ apt-get install evince
$ apt-get install vlc
$ apt-get install audacious

====================================
TITLE: 安装virtualbox

URL: http://linux.chinaunix.net/techdoc/system/2009/02/10/1061630.shtml
     http://linux.chinaunix.net/techdoc/install/2007/12/10/974069.shtml
     https://www.virtualbox.org/manual/ch02.html#install-linux-host
     http://wiki.debian.org/VirtualBox#Starting
====================================

$ apt-get install linux-headers-amd64 virtualbox

重启后内核中的vboxdrv模块自动启动。因为系统权限问题，需要把virtualbox用户添加进vboxusers组中。

$ sudo adduser `whoami` vboxusers

====================================
TITLE: 设置声卡
====================================

$ sudo apt-get install alsa-base
$ sudo apt-get install alsa-utils
$ sudo apt-get install alsa-oss

初始化声卡设置

$ sudo alsactl init

调节音量

$ sudo alsamixer

====================================
TITLE: 安装Chrome浏览器
====================================

下载Chrome

$ wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

安装

$ sudo dpkg -i ./google-chrome-stable_current_amd64.deb

====================================
TITLE: 启动小红点支持

URL: http://wiki.debian.org/InstallingDebianOn/Thinkpad/Trackpoint
     http://okomestudio.net/biboroku/?p=1816
====================================

确保xinput已安装，若没有

$ sudo apt-get install xinput

查看TrackPoint相关的event ID

$ xinput list
⎡ Virtual core pointer                    	id=2	[master pointer  (3)]
⎜   ↳ Virtual core XTEST pointer              	id=4	[slave  pointer  (2)]
⎜   ↳ SynPS/2 Synaptics TouchPad              	id=12	[slave  pointer  (2)]
⎜   ↳ TPPS/2 IBM TrackPoint                   	id=13	[slave  pointer  (2)]
⎜   ↳ USB Optical Mouse                       	id=16	[slave  pointer  (2)]
⎣ Virtual core keyboard                   	id=3	[master keyboard (2)]
    ↳ Virtual core XTEST keyboard             	id=5	[slave  keyboard (3)]
    ↳ Power Button                            	id=6	[slave  keyboard (3)]
    ↳ Video Bus                               	id=7	[slave  keyboard (3)]
    ↳ Video Bus                               	id=8	[slave  keyboard (3)]
    ↳ Sleep Button                            	id=9	[slave  keyboard (3)]
    ↳ Integrated Camera                       	id=10	[slave  keyboard (3)]
    ↳ AT Translated Set 2 keyboard            	id=11	[slave  keyboard (3)]
    ↳ ThinkPad Extra Buttons                  	id=14	[slave  keyboard (3)]
    ↳ ACPI Virtual Keyboard Device            	id=15	[slave  keyboard (3)]

这里TrackPoint对应的ID为13

$ xinput --set-prop --type=int --format=8 13 "Evdev Wheel Emulation" 1
$ xinput --set-prop --type=int --format=8 13 "Evdev Wheel Emulation Button" 2
$ xinput --set-prop --type=int --format=8 13 "Evdev Wheel Emulation Axes" 6 7 4 5

或者，使用新式命令行

$ xinput --set-int-prop "TPPS/2 IBM TrackPoint" "Evdev Wheel Emulation" 8 1
$ xinput --set-int-prop "TPPS/2 IBM TrackPoint" "Evdev Wheel Emulation Button" 8 2
$ xinput --set-int-prop "TPPS/2 IBM TrackPoint" "Evdev Wheel Emulation Axes" 8 6 7 4 5

若要启动时运行，在用户目录下新建~/.xsessionrc，内容如下：

# for IBM Track Point
#
xinput --set-int-prop "TPPS/2 IBM TrackPoint" "Evdev Wheel Emulation" 8 1
xinput --set-int-prop "TPPS/2 IBM TrackPoint" "Evdev Wheel Emulation Button" 8 2
xinput --set-int-prop "TPPS/2 IBM TrackPoint" "Evdev Wheel Emulation Axes" 8 6 7 4 5

====================================
TITLE: 修改系统时间
====================================

Linux和Windows加载处理系统时间的差异

Linux 在每次启动时会加载BIOS的时间，并在退出时把时间写回BIOS。默认情况下，Linux认为BIOS里的时间是世界时间（UTC）。因此它读入世界时间然后根据用户所在时区计算出本地时间。对于中国而言，就是加上8小时。

Windows只认识本地时间，所以登录 Windows后设置的时间会写回BIOS。再登录进Debian会被识别为是世界时间，从而导致Linux下的本地时间比正确时间快了8小时（针对中国东8区）。 如果在Linux里修改本地时间（减去8小时），世界时间相应的也会被减去8小时，这又会导致Windows里的时间慢了8小时（因为Linux在退出时会 将修改后的世界时间写回BIOS）。

解决办法

设置本地时区：

# dpkg-reconfigure tzdata

关闭默认UTC时间：

vi /etc/default/rcS  把UTC=yes改为UTC=no，使Linux默认BIOS时间为本地时间。

但实际上，该选项不存在。查看说明，发现man文件在NOTE标题下有这么一句话：

The UTC setting is replaced by the   UTC or LOCAL setting in /etc/adjtime, and  should  have  been  migrated  automatically.

原来在debian7中UTC设置跑到了/etc/adjtime 文件里头了，如下：

# cat /etc/adjtime 
0.143232 1370369519 0.000000 1370369519 
UTC

只需要把UTC改为LOCAL即可，改完后如下：

# cat /etc/adjtime
0.143232 1370369519 0.000000
1370369519
LOCAL

修改系统时间： # date -s "YYYY/MM/DD hh:mm:ss"

====================================
TITLE: 删除evolution
====================================

evolution的总是出现连接错误，于是只能果断删除，用thunderbird

# apt-get remove evolution evolution-common evolution-data-server evolution-data-server-common evolution-plugins libevolution

====================================
TITLE: 安装Mozilla软件

URL:  http://wangye.org/blog/archives/609/
====================================

登录Ubuntuzilla项目主页，该项目主要是打包了最新的Mozilla基金会的FireFox、SeaMonkey以及ThunderBird的Repository，大家看到Ubuntu可能会认为只是为Ubuntu这款衍生系统准备的，其实不然，我们也可以将其应用到Debian系统上以及其他基于Debian的衍生系统上。

1. 添加APT源地址

我们需要在/etc/apt/sources.list添加下面的源地址：

deb http://downloads.sourceforge.net/project/ubuntuzilla/mozilla/apt all main

2. 导入密钥Key

sudo apt-key adv --recv-keys --keyserver keyserver.ubuntu.com C1289A29

3. 更新APT源列表

sudo apt-get update

4. 安装软件

通过下面的命令可以分别安装FireFox、SeaMonkey以及ThunderBird：

# 安装FireFox
sudo apt-get install firefox-mozilla-build
# 安装ThunderBird
sudo apt-get install thunderbird-mozilla-build
# 安装SeaMonkey
sudo apt-get install seamonkey-mozilla-build

====================================
TITLE: Thunderbird DavMail workstation代替Outlook访问Exchange

URL:   http://blog.csdn.net/sheismylife/article/details/7402935
====================================

下载DavMail workstation的安装包

http://davmail.sourceforge.net/download.html

选择64位版本davmail-linux-x86_64-version.tgz

解压并确认Java环境已经装好，运行davmail

$ tar -zxvf davmail-linux-x86_64-version.tgz  
$ nohum ./davmail.sh&

注意OWA(Exchange) URL: 里面填写web版本访问你的Exchange server上邮件的登录地址。也就是登录界面出现的时候将网页地址复制下来，填入这里即可。其他默认设置。这里并不需要输入你的用户名和密码，那个在Thunderbird里面设置。

启动Thunderbird,然后创建一个已经存在的email账户。

Your name:     First Last
Email address: xxx@mail.com
Password:      xxxxxxxx

注意：一个是两个server都填127.0.0.1，对应端口和设置都参考devmail，SSL：None, Authentication: Normal password

Username填写你在exchange server上的帐号，根据exchange server版本，有时候需要用这种形式：域名\username，然后点击创建帐号按钮。


====================================
TITLE: 开启32体系支持
====================================

# dpkg --add-architecture i386
# apt-get update

====================================
TITLE: 安装wine
====================================

# apt-get install wine-bin:i386
# apt-get install vpnc

====================================
TITLE: 支持exFAT文件系统

URL: https://code.google.com/p/exfat/wiki/HOWTO
====================================

$ sudo apt-get install exfat-fuse

# mount.exfat-fuse /deb/sdb /mnt

====================================
TITLE: home下生成libpeerconnection.log解决方法
====================================

无意发现在$HOME下有文件libpeerconnection.log，删除后再次出现，原来是Chrome浏览器所生成的临时文件，解决办法如下：

编辑此文件/opt/google/chrome/google-chrome [需要ROOT权限]

找到下面这行代码

exec-a "$ 0" "$ HERE / chrome" "$ @"

在这行代码前添加

cd /tmp

保存，这样libpperconnection.log就会被生成在/tmp下了。

====================================
TITLE: 双显卡支持

URL: http://suwako.nomanga.net/
     http://wiki.debian.org/Bumblebee#Power_Management
     http://www.shijida.net/?p=26
====================================

现在预装 Windows 7 的很多笔记本都使用了集成显卡加独立显卡的双显卡技术（如：Nvidia Optimus，其它的显卡品牌不知道 ），一般情况下只使用集成显卡以节省电能，需要 3D 加速的时候再启用独立显卡。这种技术需要操作系统的支持，这个切换的过程可以是自动的。在 Linux 下，有大牛们实现了一种手动的独立显卡启动（BumbleBee）和自动的节能切换（bbswitch），虽然比不上 Windows 7 操作系统级别的原生支持，但也基本可用。安装 BumbleBee 和 bbswitch 的步骤是按照 Debian Wiki : http://wiki.debian.org/Bumblebee 上进行的。方法如下:

1. 查看显卡类型

$ lspci -v

00:02.0 VGA compatible controller: Intel Corporation 3rd Gen Core processor Graphics Controller (rev 09) (prog-if 00 [VGA controller])
	Subsystem: Lenovo Device 21f4
	Flags: bus master, fast devsel, latency 0, IRQ 45
	Memory at f1400000 (64-bit, non-prefetchable) [size=4M]
	Memory at e0000000 (64-bit, prefetchable) [size=256M]
	I/O ports at 6000 [size=64]
	Expansion ROM at <unassigned> [disabled]
	Capabilities: <access denied>
	Kernel driver in use: i915
01:00.0 VGA compatible controller: NVIDIA Corporation GF108 [Quadro NVS 5400M] (rev ff) (prog-if ff)
	!!! Unknown header type 7f

可以发现本机自带两个显卡，

2. 安装Nvida显卡，这里我选的是私有显卡

$ sudo apt-get install nvidia-glx linux-headers-$(uname -r) nvidia-kernel-dkms

安装驱动过程会提示你修改xorg.conf，不要鸟他，不然就不能使用bumblebee来关闭和开启独显。

设置默认的显卡类型为mesa，即Intel的显卡

$ sudo update-alternatives --set glx /usr/lib/mesa-diverted

3. 安装Bumblebee

添加bumblebee所在源的keyring

$ sudo wget -O - http://suwako.nomanga.net/suwako.asc | apt-key add -

添加以下源列表

deb http://suwako.nomanga.net/debian sid main contrib
deb-src http://suwako.nomanga.net/debian sid main

更新源信息，安装bumblebee

$ sudo aptitude update
$ sudo apt-get install bumblebee bumblebee-nvidia

这样就会安装bumblebee, bbswitch-dkms

修改bumblebee配置

编辑/etc/bumblebee/bumblebee.conf

把Driver=后面添加上nvidia把驱动一节的PMMethod=auto修改为PMMethod=bbswitch。

把自己的用户添加到bumblebee的group里去

$ sudo adduser david bumblebee

重启机器

安装成功后，如果某一个程序要使用 3D 加速，如：firefox，可以这样执行“optirun firefox”。执行后，“lsmod”会发现新加载了 nvidia 模块。相关程序结束后，“lsmod”会发现 nvidia 模块消失了。另外，单独分别执行：

$ optirun glxspheres
$ glxspheres

结果对比一下，也可看出启用 Nvidia 显卡与否的显著区别

设置nvidia

$ optirun nvidia-settings -c :8

会弹出nvidia设置界面

个人感悟的确感觉装了风扇声音下了许多。
